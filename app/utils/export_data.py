#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –ø–∞—Ä—Å–µ—Ä–æ–º Excel –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import pandas as pd
from app.services.excel_parser import ExcelDataParser
from app.core.database import get_session
from app.services.data_import_service import DataImportService



def demo_multiple_shops():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤"""
    print("\n" + "="*50)
    print("=== –ü–∞—Ä—Å–∏–Ω–≥ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ ===\n")
    
    parser = ExcelDataParser()
    
    try:
        # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç—Ä–æ–∫ 1, 2, 3 (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
        shop_rows = [1, 159]
        results = parser.parse_multiple_shops("resources/Book1.xlsx", shop_rows)
        
        for row_num, shop_data in results.items():
            print(f"–ú–∞–≥–∞–∑–∏–Ω (—Å—Ç—Ä–æ–∫–∞ {row_num}):")
            if shop_data:
                valid_data, errors = parser.validate_data(shop_data)
                print(f"  üì¶ –ó–∞–ø–∏—Å–µ–π: {len(shop_data)}")
                print(f"  ‚úÖ –í–∞–ª–∏–¥–Ω—ã—Ö: {len(valid_data)}")
                if errors:
                    print(f"  ‚ùå –û—à–∏–±–æ–∫: {len(errors)}")
                
                if valid_data:
                    total = sum(record['revenue'] for record in valid_data)
                    print(f"  üí∞ –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: {total:,.2f} —Ä—É–±.")
            else:
                print("  üì≠ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
            print()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ: {e}")


async def demo_database_import():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É (—Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –ë–î)"""
    print("\n" + "="*50)
    print("=== –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö ===")
    print("(–¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)\n")
    
    try:
        async with get_session() as session:
            import_service = DataImportService(session)
            # –ü—Ä–∏–º–µ—Ä –∏–º–ø–æ—Ä—Ç–∞ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ —Å ID 1 –∏ —Å—Ç—Ä–æ–∫–∏ 1
            imported, errors = await import_service.import_from_excel(
                file_path='resources/Book1.xlsx',
                store_id=1,
                shop_row=1,
                overwrite_existing=False
            )
            print(f"‚úÖ –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(imported)}")
            if errors:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∏ –ø—Ä–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ ({len(errors)}):")
                for err in errors:
                    print(f"  - {err}")
     
    except Exception as e:
        print(f"‚ÑπÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {e}")


if __name__ == "__main__":
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    asyncio.run(demo_database_import())